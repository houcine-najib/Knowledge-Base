I- Concepts                        
#
VFS           : virtual file system interface provides a common interface for different file system types.
Inode         : index node contain metadata for a file system object(permissions,timestamps, data pointers).
Extent        : an extent is a contiguous group of blocks.
Journaling    : writes journal logs in journal area before writing actual user data to the file system.
Copy-on-Write : file system does not overwrite existing blocks.
Scrubbing     : asynchronously reads all data blocks and verifies checksums
WriteBarriers : enforce proper on-disk ordering of journal commits, disk controller caches safe to use
Read-ahead    : pre-fetching data that is likely to be read and loading it into the page cache.

II- FS  Tuning 
#
1) VFS
# Documenation available in /usr/share/doc/kernel-doc-<version>/Documenation/sysctl/fs.txt and vm.txt
fs.file-max   (/proc/sys/fs/file-max)   = maximum number of file-handles the kernel will allocate.
fs.nr_open    (/proc/sys/fs/nr_open)    = maximum number of file-handles a process can allocate.
fs.aio-max-nr (/proc/sys/fs/aio-max-nr) = maximum number of asynchronous io requests system-wide.

vm.drop_caches (/proc/sys/vm/drop_caches) = 1 : free pagecache
                                          = 2 : free dentries and inodes
                                          = 3 : free pagecache, dentries and inodes

vm.vfs_cache_pressure (/proc/sys/vm/cache_pressure) = controls kernel directory and inode objects caching tendency.
                                                    = 100  : fair rate cache/reclaim
                                                    = <100 : perfer cache
                                                    = 0    : always cache
                                                    = >100 : perfer reclaim

vm.page-cluster                                     = swap page readahed ( power of 2)

2) XFS  
# Documenation available in /usr/share/doc/kernel-doc-<version>/Documenation/filesystems/xfs.txt
fs.xfs.xfssyncd_centisecs   (Min: 100 Default:3000 Max:720000) interval at which the xfssyncd thread flushes metadataout to disk.
fs.xfs.xfsbufd_centisecs    (Min: 50  Default:100  Max:3000)   interval at which xfsbufd scans the dirty metadata buffers list.
fs.xfs.age_buffer_centisecs (Min: 100 Default:1500 Max:720000) age at which xfsbufd flushes dirty metadata buffers to disk.

III- Format Options
# 
/proc/filesystems : all filesystems registered to the kernel ( nodev : without persistent storage device)
/proc/mounts      : list of all currently mounted filesystem (/etc/mtab).
/etc/fstab        : list of all mounts entries.
#
df      -aTh      : list all filesystems with type and usage Bytes (-i for inode usage).    
findmnt -a        : tree list all mounted filesytems or search for a filesystem.
lsblk   -af       : list all block devices and corresponding mount points.
#
1) Ext4
# Documenation available in /usr/share/doc/kernel-doc-<version>/Documenation/filesystems/ext4.txt
/sys/fs/ext4/<disk>

# Configurations in /etc/mke2fs.conf
mk2fs : -n = dry-run formatting paratition
        -I = specify inode size (Default 256)
        -b = block size : 1024,2048 or 4096
        -i = bytes for every inode (bytes-per-inode)
        -N = number of inodes 
        -E : stride       = stride-size  = RAID chunk-size / Block Size
             stripe_width = stripe-width = RAID Number of disks * stride
             discard :  discard blocks at mkfs (disbale nodiscard) 
        -J : size   = internel journal size in MB
             device = device of external journal (also label or uuid)
      
        -O : journal_dev  : create externel journal in device prior to mounting. 
             
             <feature> / ^<no_feature>      : override filesystem default features (/etc/mke2fs.conf)
             E.g: has_journal,extent ... ( man tune2fs )
      
        -T : usage type (small,big ....)

tune2fs : can be used to adjust most of these parameters (may need to be unmounted)
          -l = show block device informations

Note: Number of disks in RAID is calculated : RAID 0  --> N
                                              RAID 1  --> N/2
                                              RAID 5  --> N-1
                                              RAID 6  --> N-2
                                              RAID 10 --> N/2
Stride size = [RAID chunk size] / [Filesystem block size]

Convert ext4 with internal journal to external journal 

2) XFS
# Documenation available in /usr/share/doc/kernel-doc-<version>/Documenation/filesystems/xfs.txt
/sys/fs/xfs/<disk>
xfs_info <device>
xfs_io -x -c "resblks" <mnt> : get and/or set count of reserved filesystem blocks.
xfs_io -x -c "stat/statfs"   : get filesystem stats

mkfs.xfs : -b : size=<bytes> filesystem block size (min 512,default 4kB,max 64KB )
           -d : agcount= number of allocation groups (number of CPUs)
                agsize=<bytes> size of allocation group ( min 16 MB, max 1 TB)
                sunit  = stripe unit (or chunk-size) of RAID array /  block size
                       = su = chunk-size in bytes
                swidth = stripe width of RAID array in 512-byte block (number of disks in raid * sunit )
                       = sw = number of disks in raid
           -i : size   = inode size in bytes (default 256 ,max 2048)
                maxpct = max % allocted to inode (default 25% <1TB, 5% <50TB,1% > 50TB)
           -l : internal = 1 internel log device,0 external log device
                logdev   = device for filesystem log
                size     = size of log in bytes(*b in blocks)
                sunit/su = same as for data
           -n : size= directory block size in bytes (for many small files : 64KB for >1,000,000 entries)
           
IV- Mount Options :
#
1) Generic Options
#
defaults mount options are : rw, suid, dev, exec, auto, nouser, and async
#
rw/ro
auto/noauto         = mount explicitly
async/sync          = I/O synchronously
exec/noexec         = permit binaries execution
remount,rw          = remount filesystem rw
nouser/user         = allow non-root to mount
atime/noatime       = disables registering a file access time
norelatime/relatime = update  access times relative to modify or change  
diratime/nodiratime = disbale directory access time update
                               
Note: Filesystems has specific mount options. 
Example: for extended filesystem family defaults mount options can be listed by : tune2fs -l <paratition>
#
1) Ext4
#
mount -t ext4 -o    journal_path/journal_dev    = external journal path/device (major/minor)
                    journal_ioprio = 0..7 (lowest;default 3) 
                    data           = journal   = metadata written prior to its data written into the main filesystem
                                     ordered   = data written prior to its metadata commited to journal (default mode)
                                     writeback = metadata written asynchronously from the corresponding data (highest-throughput)
                                     kernel boot commandline : rootflags=data=<mode> ( only if rootfs is ext3/ext4)
                    barrier=1/barrier=0 = barrier/nobarrier|
                    stripe              =  RAID5/6 data disks * ( chunk size / block size)  
                    norecovery/noload  
                    discard/nodiscard   = discard blocks marked free by the FS in device ( fstrim for SSD devices)
                    commit              = sync all data and metadata every nrsec seconds (default 5s)
          
2) XFS
#
mount -t xfs -o  barrier|nobarrier = enable/disbale barriers (default enabled)
                 discard|nodiscard = discard free blocks     (default no;fstrim)
                 inode32|inode64   = 32/64 bits inode        (default 64)
                 logbufs           = number of in-memory log buffers (2-8 default 8)
                 logbsize          = size of each log buffer (muliple of stripe unit)
                 logdev            = log device 
                 norecovery        = mount read-only without log recovery
                 sunit/swidth      = stripe unit/stripe width
#
V- Defragmentation
#
filefrag   = report file fragmentation for ext4 and xfs
Example: filefrag -v /mnt/fsfrag/largefile
#
1) Ext4
#
e2fsck     = report the percentage of fragmented files
Example: e2fsck -fn /dev/sdb1 (*) (must be  umounted)

e2freefrag = report free space fragmentation
Example: e2freefrag /dev/sdb1 (*) (debugfs: freefrag)

(*) device not mount point 

e4defrag   = defragmentation tool
Exmaple: e4defrag -v  <target> : target can be file,directory,device
         e4defrag -c  <target> : suggest defragmenation or not (no defrag)
2) XFS
#
xfs_db  = report a fragmentation factor for device
Example: xfs_db -c frag -r /dev/sda1

xfs_bmap = report a fragmentation factor for file
Exmaple: xfs_bmap -v /mnt/fsfrag/largefile

xfs_fsr  = defragmentation tool
Exmaple: xfs_fsr -v <target> : target can be file,device
         xfs_fsr -v          : defrag all xfs mounts (-t specifiy time in seconds ; default 7200s)
#
VI- Comparison of FS
###################################################################
                        EXT4             XFS        BTRFS

Indexing Algorithm      Hash B-tree      B+tree     Modified B-tree
Max volume size         1 Ebytes         8 Ebytes   16 Ebytes
Max file size           16 Tbytes        8 Ebytes   16 Ebytes
Max number of files     4 billion        2^64       2^64
Max file name size      255 bytes        255 bytes  255 bytes
Transparent compression No               No         Yes
Transparent encryption  Yes              No         Planned
Copy-on-Write (COW)     No               Planned    Yes
Snapshots               No               Planned    Yes

