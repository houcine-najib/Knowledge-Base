
Uniform Memory Access (UMA)     : symmetric multiprocessing (SMP) 
Each CPU has uniform access latency to all of memory, via a shared system bus.

Non-Uniform Memory Access(NUMA) : 
Each CPU has a dedicated area of memory combained referred to as NUMA  Node.

/sys/devices/system/node : NUMA nodes infos , and relative distances between those nodes.
Example : per node hugepages   : cat /sys/devices/system/node/*/hugepages/hugepages-2048kB/*
          NUMA stat            : cat /sys/devices/system/node/*/numastat
          per node memory info : cat /sys/devices/system/node/*/meminfo
          
Node Distance : hardcoded values set by motherboard manufacturer exposed to OS by ACPI to determine the relative distance
between any 2 NUMA nodes 
Distances range from 10 (fastest) to 254 (25.4 slower) 255 for no NUMA connection.

numastat    tool for  memory statistics on a per-NUMA-node basis. 
           ⁠numa_hit       : number of pages that were successfully allocated to this node.
⁠           numa_miss      : number of pages that were allocated on this node because of low memory on the intended node.
⁠           numa_foreign   : number of pages initially intended for this node that were allocated to another node instead. 
            interleave_hit : number of interleave policy pages successfully allocated to this node.
⁠           local_node     : number of pages successfully allocated on this node, by a process on this node.
⁠           other_node     : number of pages allocated on this node, by a process on another node.

numastat -m                    : cat /sys/devices/system/node/*/meminfo
numastat -p <PID> or <pattern> :  per-node process memory usage (in MBs) for <PID> or list of process <pattern> 




N u mact l lets administrators run a process with a specified scheduling or memory placement policy.
N u mact l can also set a persistent policy for shared memory segments or files, and set the processor
affinity and memory affinity of a process.
N u mact l provides a number of useful options. This appendix outlines some of these options and
gives suggestions for their use, but is not exhaustive.
⁠- - h ard ware
D isplays an inventory of available nodes on the system, including relative distances
between nodes.
⁠- - memb in d
Ensures that memory is allocated only from specific nodes. If there is insufficient memory
available in the specified location, allocation fails.
⁠- - cp u n o d eb in d
Ensures that a specified command and its child processes execute only on the specified
node.
⁠- - p h ycp u b in d
Ensures that a specified command and its child processes execute only on the specified
processor.
⁠- - lo calallo c
Specifies that memory should always be allocated from the local node.
⁠- - p ref erred
Specifies a preferred node from which to allocate memory. If memory cannot be allocated
from this specified node, another node will be used as a fallback.



numactl --hardware : nodes topology

















To use n u mad as an executable, just run:
# numad
While n u mad runs, its activities are logged in /var/l o g /numad . l o g . It will run until stopped with
the following command:
72
⁠Appendix A. T ool Reference
# numad -i 0
Stopping n u mad does not remove the changes it has made to improve NUMA affinity. If system use
changes significantly, running n u mad again will adjust affinity to improve performance under the
new conditions.
To restrict n u mad management to a specific process, start it with the following options.
# numad -S 0 -p pid
⁠- p pid
This option adds the specified pid to an explicit inclusion list. The process specified will not
be managed until it meets the n u mad process significance threshold.
⁠- S 0
This sets the type of process scanning to 0 , which limits n u mad management to explicitly
included processes.
For further information about available n u mad options, refer to the n u mad man page:
$ man numad
A.14 .2. Using numad as a service
While n u mad runs as a service, it attempts to tune the system dynamically based on the current
system workload. Its activities are logged in /var/l o g /numad . l o g .
To start the service, run:
# systemctl start numad.service
To make the service persist across reboots, run:
# chkconfig numad on
For further information about available n u mad options, refer to the n u mad man page:
$ man numad
A.14 .3. Pre-placement advice
n u mad provides a pre-placement advice service that can be queried by various job management
systems to provide assistance with the initial binding of CPU and memory resources for their
processes. This pre-placement advice is available regardless of whether n u mad is running as an
executable or a service.
A.14 .4 . Using numad wit h KSM
If KSM is in use on a NUMA system, change the value of the /sys/kernel /mm/ksm/merg e_no d es
parameter to 0 to avoid merging pages across NUMA nodes. Otherwise, KSM increases remote
memory accesses as it merges pages across nodes. Furthermore, kernel memory accounting
73
Performance T uning G uide
statistics can eventually contradict each other after large amounts of cross-node merging. As such,
numad can become confused about the correct amounts and locations of available memory, after the
KSM daemon merges many memory pages. KSM is beneficial only if you are overcommitting the
memory on your system. If your system has sufficient free memory, you may achieve higher
performance by turning off and disabling the KSM daemon.



