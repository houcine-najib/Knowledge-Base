I- Hardware

Memory Zones (for 64-bit processors)
DMA    (first 16MB of memory 24-bit I/O)
DMA32  (16MB to 4GB 32-bit I/O)
Normal (4GB to end of RAM...)


II- Memory Fragmentation and Compaction

Fragmentation information can be displayed in /proc/buddyinfo file simplified in the below output 

               Order             0       1      2      3      4      5      6      7      8      9     10 
               Zone 4k Pages     1       2      4      8     16     32     64    128    256    512   1024
               Zone Byte Size  4kB     8kB   16kB   32kB   64kB  128kB  256kB  512kB 1024kB 2048kB 4096kB
                        |                                                                                |   
Node         Zone name  |                                                                                |
------------------------+--------------------------------------------------------------------------------+
Node 0, zone      DMA   |       3       2      2      2      2      1      0      0      1      1      3 |
Node 0, zone    DMA32   |    8774    4785   2383   1472   1102    840    606    377    190    139     19 |
Node 0, zone   Normal   |  147104  336891 113434 136648  72075  29349   9539   3304   1481    727      0 |
Node 1, zone   Normal   | 1211026 1381111 482960  82119   7636    924    186     83    283      1      0 |

Furthermore /proc/pagetypeinfo file classify these pages by type (Unmovable,Reclaimable,Movable,Reserve,Isolate)
Compaction 

III- HugePage and Transparent Huge Pages (THP)

THP

Enable/Disable at Runtime  /sys/kernel/mm/transparent_hugepage/enabled
 always  : enabled 
 madvise : disable hugepages system-wide only in madvise regions
 never   : disabled 

Disable at boot
Kernel commandline : transparent_hugepage=never|always|madvise

Defragmentation /sys/kernel/mm/transparent_hugepage/defrag
always  : enabled
madvise : defrag only in madvise regions
never   : disbaled regular pages served
Zero Huge Pages /sys/kernel/mm/transparent_hugepage/use_zero_page
0   : enable
1   : disable

But to use hugepages effectively, the kernel must find physically continuous areas of memory big enough to satisfy the request,
and also properly aligned. For this, a khugepaged kernel thread has been added. 
This thread will occasionally attempt to substitute smaller pages being used currently with a hugepage allocation,
thus maximizing THP usage.

IV- SWAP 
SWAP is disk space used in case of memory pressure to swap-out pages
 it's better to swap out a program that's been inactive for a while, and instead keep often-used files in cache
 LRU in inactive memory 
 
 
I- OOM
Out of Memory  killer is kicking in is purely based on the availability of free pages. 
This could be a page alloc failure from any memory zones
